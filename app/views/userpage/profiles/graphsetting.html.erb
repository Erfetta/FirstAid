<!DOCTYPE html>
<!-- Coding By CodingNepal - codingnepalweb.com -->
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Navigation Bar with Indicator</title>

        <!-- CSS -->
        
                
        <!-- Boxicons CSS -->
        <link href='https://unpkg.com/boxicons@2.1.2/css/boxicons.min.css' rel='stylesheet'>

        
    </head>
    <body>
        <body class="body_user <%= @theme %>-theme">




    <div class="settings-container">
    <h2 class="title-settings">Opzioni profilo</h2>

    <!-- Tempo del Grafico -->
    <div class="settings_user-graph-time">
        <label>Graph Time Range:</label>
        <select name="graph-time">
        <option value="1-minutes">1 Minutes</option>
        <option value="2-minutes">2 Minutes</option>
        <option value="6-minutes">6 Minutes</option>
        <option value="12-minutes">12 Minutes</option>
        </select>
    </div>

    <!-- Eliminazione Dati -->
    <div class="settings_user-data-delete">
        <label>Delete Data After:</label>
        <select name="data-delete-time">
        <option value="1-minutes">1 Minutes</option>
        <option value="2-minutes">2 Minutes</option>
        <option value="6-minutes">6 Minutes</option>
        <option value="12-minutes">12 Minutes</option>
        </select>
    </div>
    </div>
    
 
    <nav class="nav_user">
        <ul class="nav_user-content">
            <li class="nav_user-list">
                <%= link_to setting_path, class: 'link-item user' do %>
                    <i class='bx bxs-cog link-icon'></i> <!-- Modificato da bxs-user a bxs-cog -->
                    <span class="link-text">Settings</span>
                <% end %>
            </li>


            <li class="nav_user-list">
            <%= link_to root_path, class: 'link-item user' do %>
                <i class='bx bxs-home link-icon user'></i>
                <span class="link-text user">Home</span>
            <% end %>
        </li>
            

            <li class="nav_user-list">
                <%= link_to profile_path, class: 'link-item active user' do %>
                    <i class='bx bxs-user link-icon'></i>
                    <span class="link-text">Profile</span>
                <% end%>
            </li>
            <span class="indicator_user"></span>
        </ul>
    </nav>


<!-- JavaScript -->
    <script>
    document.addEventListener("DOMContentLoaded", () => {

        // Recupera i selettori
  const graphTimeSelect = document.querySelector("select[name='graph-time']");
  const dataDeleteSelect = document.querySelector("select[name='data-delete-time']");

  // Funzione per impostare un cookie
  function setCookie(name, value, days) {
    const date = new Date();
    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000); // Scadenza in giorni
    document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;
  }

  // Funzione per leggere un cookie
  function getCookie(name) {
    const cookies = document.cookie.split("; ");
    for (const cookie of cookies) {
      const [key, value] = cookie.split("=");
      if (key === name) return value;
    }
    return null;
  }

  // Aggiorna i valori delle opzioni basandosi sui cookie salvati
  function loadSavedOptions() {
    const savedGraphTime = getCookie("graph_time");
    const savedDataDeleteTime = getCookie("data_delete_time");

    if (savedGraphTime) graphTimeSelect.value = savedGraphTime;
    if (savedDataDeleteTime) dataDeleteSelect.value = savedDataDeleteTime;
  }

  // Event listeners per salvare le selezioni nei cookie
  graphTimeSelect.addEventListener("change", () => {
    setCookie("graph_time", graphTimeSelect.value, 30); // Salva per 30 giorni
  });

  dataDeleteSelect.addEventListener("change", () => {
    setCookie("data_delete_time", dataDeleteSelect.value, 30); // Salva per 30 giorni
  });

  // Carica le opzioni salvate al caricamento della pagina
  loadSavedOptions();

        


        const linkItems = document.querySelectorAll(".link-item");
        const indicator = document.querySelector(".indicator_user");

        function updateIndicator() {
            const activeItem = document.querySelector(".link-item.active");
            if (activeItem) {
                const { offsetLeft, offsetWidth } = activeItem;
                indicator.style.left = `${offsetLeft + (offsetWidth / 2)}px`;
            }
        }

        linkItems.forEach((linkItem) => {
            linkItem.addEventListener("click", () => {
                document.querySelector(".link-item.active")?.classList.remove("active");
                linkItem.classList.add("active");
                updateIndicator();
            });
        });

        updateIndicator();
        window.addEventListener("resize", updateIndicator);
    });
        </script>
    </div>    
</body>
</html>