<!-- app/views/operatorpage/home/operator_index.html.erb -->
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
</head>
<body>
    <div class="container_navbar_operator">
        <nav class="navbar_operator">
            <%= button_to root_path, method: :get, class: 'nav-button_operator' do %>
              <span class="material-symbols-outlined">
                home
              </span>
            <% end %>
            <%= button_to manual_list_path, method: :get, class: 'nav-button_operator' do %>
              <span class="material-symbols-outlined">
                import_contacts
              </span>
            <% end %>
            <%= button_to report_history_list_path, method: :get, class: 'nav-button_operator' do %>
              <span class="material-symbols-outlined">
                history
              </span>
            <% end %>
            <%= button_to operator_profile_path, method: :get, class: 'nav-button_operator' do %>
              <span class="material-symbols-outlined">
                person
              </span>
            <% end %>
        </nav>

        <div class="maps_section_operator">
            <!-- da inserire google maps -->
        </div>

        <aside class="reports_section_operator" id="reports-section">
            <% @reports.each do |report| %>
              <div class="report_area_operator">
                <p><strong>Richiesta:</strong> <%= link_to report.id, show_report_path(report)%></p>
                <% datetime = report.created_at.to_s.slice(0...-4)%>
                <p><strong>Data:</strong> <%= datetime %></p>
              </div>
            <% end %>
        </aside>
    </div>

    <script>
      function fetchReports() {
        fetch("<%= root_path %>")
          .then(response => response.text())
          .then(html => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newReportsSection = doc.querySelector('#reports-section').innerHTML;

            document.querySelector('#reports-section').innerHTML = newReportsSection;
          })
          .catch(error => console.error('Errore durante l\'aggiornamento dei reports:', error));
      }

      setInterval(fetchReports, 10000); // Aggiorna ogni 10 secondi
    </script>
</body>
</html>
